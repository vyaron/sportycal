<?php

/**
 * MailinglistTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class MailinglistTable extends Doctrine_Table {
	/**
	 * Returns an instance of this class.
	 *
	 * @return object MailinglistTable
	 */
	public static function getInstance(){
		return Doctrine_Core::getTable('Mailinglist');
	}
	
	public static function Unsubscribe($userId){
		$dateNow = date("Y-m-d g:i");
		
		$user = Doctrine::getTable('User')->find($userId);
		if ($user) {
			$user->setIsSubscribe(false);
			$user->setUpdatedAt($dateNow);
			$user->save();
			
			//Maybe important Intel remove here?
			UserCalTable::deleteMailinglist($user->getId());
			
			//TODO: delete mailing list
		}
			
		return $user;
	}
	
	public static function subscribe($calId, $tzStr, $email, $fullName='Guest', $partnerId = null, $ip = null){
		$dateNow = date("Y-m-d g:i");
		
		$user = UserTable::getByEmail($email);
		if (!$user){
			$user = new User();
			$user->setFullName($fullName);
			$user->setEmail($email);
			$user->setPassword('m@1l1ngl15t' . rand(1, 1000));
			$user->setCreatedAt($dateNow);
		} else {
			$user->setUpdatedAt($dateNow);
		}
		
		$user->setTz($tzStr);
		$user->setIsSubscribe(true);
		$user->save();
		
		$userCal = new UserCal();
  		$userCal->setCalId($calId);
	  	$userCal->setPartnerId($partnerId);
	  	
	  	$userCal->setUserId($user->getId());
	  	$userCal->setCalType($calType);
	  	$userCal->setTakenAt($dateNow);
	  	$userCal->setUpdatedAt($dateNow);
	  	$userCal->setIpAddress($ip);
	  	$userCal->setCalType(Cal::TYPE_MAILINGLIST);
	  	$userCal->save();
	  	
	  	//TODO: send welcome mail
	}
	
	public static function clearPendings(){
		$q = Doctrine_Query::create()
			->delete('Mailinglist m')
			->where('m.send_at IS NULL');

		return $q->execute();
	}
	
	public static function getAll($limit=100 ,$openTasks = true){
		$q = Doctrine::getTable('Mailinglist')->createQuery('ml')
		->innerJoin('ml.User u')
		->limit($limit);
	
		if ($openTasks) $q->where('ml.send_at IS NULL');
	
		return $q->execute();
	}
}