<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Contact', 'doctrine');

/**
 * BaseContact
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $subject
 * @property string $message
 * @property timestamp $created_at
 * @property integer $by_user_id
 * @property string $sender_name
 * @property string $sender_email
 * @property string $ip_address
 * @property User $User
 * 
 * @method integer   getId()           Returns the current record's "id" value
 * @method string    getSubject()      Returns the current record's "subject" value
 * @method string    getMessage()      Returns the current record's "message" value
 * @method timestamp getCreatedAt()    Returns the current record's "created_at" value
 * @method integer   getByUserId()     Returns the current record's "by_user_id" value
 * @method string    getSenderName()   Returns the current record's "sender_name" value
 * @method string    getSenderEmail()  Returns the current record's "sender_email" value
 * @method string    getIpAddress()    Returns the current record's "ip_address" value
 * @method User      getUser()         Returns the current record's "User" value
 * @method Contact   setId()           Sets the current record's "id" value
 * @method Contact   setSubject()      Sets the current record's "subject" value
 * @method Contact   setMessage()      Sets the current record's "message" value
 * @method Contact   setCreatedAt()    Sets the current record's "created_at" value
 * @method Contact   setByUserId()     Sets the current record's "by_user_id" value
 * @method Contact   setSenderName()   Sets the current record's "sender_name" value
 * @method Contact   setSenderEmail()  Sets the current record's "sender_email" value
 * @method Contact   setIpAddress()    Sets the current record's "ip_address" value
 * @method Contact   setUser()         Sets the current record's "User" value
 * 
 * @package    evento
 * @subpackage model
 * @author     Yaron Biton
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseContact extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('contact');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('subject', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('message', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('by_user_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('sender_name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('sender_email', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('ip_address', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'by_user_id',
             'foreign' => 'id'));
    }
}