<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Country', 'doctrine');

/**
 * BaseCountry
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $iso
 * @property string $iso3
 * @property integer $numcode
 * @property Doctrine_Collection $City
 * @property Doctrine_Collection $State
 * @property Doctrine_Collection $User
 * 
 * @method integer             getId()      Returns the current record's "id" value
 * @method string              getName()    Returns the current record's "name" value
 * @method string              getIso()     Returns the current record's "iso" value
 * @method string              getIso3()    Returns the current record's "iso3" value
 * @method integer             getNumcode() Returns the current record's "numcode" value
 * @method Doctrine_Collection getCity()    Returns the current record's "City" collection
 * @method Doctrine_Collection getState()   Returns the current record's "State" collection
 * @method Doctrine_Collection getUser()    Returns the current record's "User" collection
 * @method Country             setId()      Sets the current record's "id" value
 * @method Country             setName()    Sets the current record's "name" value
 * @method Country             setIso()     Sets the current record's "iso" value
 * @method Country             setIso3()    Sets the current record's "iso3" value
 * @method Country             setNumcode() Sets the current record's "numcode" value
 * @method Country             setCity()    Sets the current record's "City" collection
 * @method Country             setState()   Sets the current record's "State" collection
 * @method Country             setUser()    Sets the current record's "User" collection
 * 
 * @package    evento
 * @subpackage model
 * @author     Yaron Biton
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCountry extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('country');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('iso', 'string', 2, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('iso3', 'string', 3, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 3,
             ));
        $this->hasColumn('numcode', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 2,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('City', array(
             'local' => 'id',
             'foreign' => 'country_id'));

        $this->hasMany('State', array(
             'local' => 'id',
             'foreign' => 'country_id'));

        $this->hasMany('User', array(
             'local' => 'id',
             'foreign' => 'country_id'));
    }
}