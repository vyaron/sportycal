<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Category', 'doctrine');

/**
 * BaseCategory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $image_path
 * @property integer $by_user_id
 * @property timestamp $approved_at
 * @property integer $parent_id
 * @property integer $rate
 * @property integer $cals_count
 * @property string $category_ids_path
 * @property timestamp $deleted_at
 * @property integer $address_id
 * @property integer $partner_id
 * @property integer $is_public
 * @property Partner $Partner
 * @property Doctrine_Collection $Category
 * @property User $User
 * @property Address $Address
 * @property Doctrine_Collection $Alias
 * @property Doctrine_Collection $Cal
 * @property Doctrine_Collection $CalRequest
 * @property Doctrine_Collection $CategoryLink
 * @property Doctrine_Collection $Intel
 * @property Doctrine_Collection $PartnerDesc
 * @property Doctrine_Collection $ShortUrl
 * @property Doctrine_Collection $UserCal
 * 
 * @method integer             getId()                Returns the current record's "id" value
 * @method string              getName()              Returns the current record's "name" value
 * @method string              getImagePath()         Returns the current record's "image_path" value
 * @method integer             getByUserId()          Returns the current record's "by_user_id" value
 * @method timestamp           getApprovedAt()        Returns the current record's "approved_at" value
 * @method integer             getParentId()          Returns the current record's "parent_id" value
 * @method integer             getRate()              Returns the current record's "rate" value
 * @method integer             getCalsCount()         Returns the current record's "cals_count" value
 * @method string              getCategoryIdsPath()   Returns the current record's "category_ids_path" value
 * @method timestamp           getDeletedAt()         Returns the current record's "deleted_at" value
 * @method integer             getAddressId()         Returns the current record's "address_id" value
 * @method integer             getPartnerId()         Returns the current record's "partner_id" value
 * @method integer             getIsPublic()          Returns the current record's "is_public" value
 * @method Partner             getPartner()           Returns the current record's "Partner" value
 * @method Doctrine_Collection getCategory()          Returns the current record's "Category" collection
 * @method User                getUser()              Returns the current record's "User" value
 * @method Address             getAddress()           Returns the current record's "Address" value
 * @method Doctrine_Collection getAlias()             Returns the current record's "Alias" collection
 * @method Doctrine_Collection getCal()               Returns the current record's "Cal" collection
 * @method Doctrine_Collection getCalRequest()        Returns the current record's "CalRequest" collection
 * @method Doctrine_Collection getCategoryLink()      Returns the current record's "CategoryLink" collection
 * @method Doctrine_Collection getIntel()             Returns the current record's "Intel" collection
 * @method Doctrine_Collection getPartnerDesc()       Returns the current record's "PartnerDesc" collection
 * @method Doctrine_Collection getShortUrl()          Returns the current record's "ShortUrl" collection
 * @method Doctrine_Collection getUserCal()           Returns the current record's "UserCal" collection
 * @method Category            setId()                Sets the current record's "id" value
 * @method Category            setName()              Sets the current record's "name" value
 * @method Category            setImagePath()         Sets the current record's "image_path" value
 * @method Category            setByUserId()          Sets the current record's "by_user_id" value
 * @method Category            setApprovedAt()        Sets the current record's "approved_at" value
 * @method Category            setParentId()          Sets the current record's "parent_id" value
 * @method Category            setRate()              Sets the current record's "rate" value
 * @method Category            setCalsCount()         Sets the current record's "cals_count" value
 * @method Category            setCategoryIdsPath()   Sets the current record's "category_ids_path" value
 * @method Category            setDeletedAt()         Sets the current record's "deleted_at" value
 * @method Category            setAddressId()         Sets the current record's "address_id" value
 * @method Category            setPartnerId()         Sets the current record's "partner_id" value
 * @method Category            setIsPublic()          Sets the current record's "is_public" value
 * @method Category            setPartner()           Sets the current record's "Partner" value
 * @method Category            setCategory()          Sets the current record's "Category" collection
 * @method Category            setUser()              Sets the current record's "User" value
 * @method Category            setAddress()           Sets the current record's "Address" value
 * @method Category            setAlias()             Sets the current record's "Alias" collection
 * @method Category            setCal()               Sets the current record's "Cal" collection
 * @method Category            setCalRequest()        Sets the current record's "CalRequest" collection
 * @method Category            setCategoryLink()      Sets the current record's "CategoryLink" collection
 * @method Category            setIntel()             Sets the current record's "Intel" collection
 * @method Category            setPartnerDesc()       Sets the current record's "PartnerDesc" collection
 * @method Category            setShortUrl()          Sets the current record's "ShortUrl" collection
 * @method Category            setUserCal()           Sets the current record's "UserCal" collection
 * 
 * @package    evento
 * @subpackage model
 * @author     Yaron Biton
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCategory extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('category');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('image_path', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('by_user_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('approved_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('parent_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('rate', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('cals_count', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('category_ids_path', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('deleted_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('address_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('partner_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('is_public', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '1',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Partner', array(
             'local' => 'partner_id',
             'foreign' => 'id'));

        $this->hasMany('Category', array(
             'local' => 'id',
             'foreign' => 'parent_id'));

        $this->hasOne('User', array(
             'local' => 'by_user_id',
             'foreign' => 'id'));

        $this->hasOne('Address', array(
             'local' => 'address_id',
             'foreign' => 'id'));

        $this->hasMany('Alias', array(
             'local' => 'id',
             'foreign' => 'category_id'));

        $this->hasMany('Cal', array(
             'local' => 'id',
             'foreign' => 'category_id'));

        $this->hasMany('CalRequest', array(
             'local' => 'id',
             'foreign' => 'category_id'));

        $this->hasMany('CategoryLink', array(
             'local' => 'id',
             'foreign' => 'category_id'));

        $this->hasMany('Intel', array(
             'local' => 'id',
             'foreign' => 'category_id'));

        $this->hasMany('PartnerDesc', array(
             'local' => 'id',
             'foreign' => 'category_id'));

        $this->hasMany('ShortUrl', array(
             'local' => 'id',
             'foreign' => 'category_id'));

        $this->hasMany('UserCal', array(
             'local' => 'id',
             'foreign' => 'category_id'));
    }
}