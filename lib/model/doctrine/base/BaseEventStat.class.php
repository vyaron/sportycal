<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('EventStat', 'doctrine');

/**
 * BaseEventStat
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $event_id
 * @property string $type
 * @property string $text
 * @property timestamp $created_at
 * @property Event $Event
 * 
 * @method integer   getId()         Returns the current record's "id" value
 * @method integer   getEventId()    Returns the current record's "event_id" value
 * @method string    getType()       Returns the current record's "type" value
 * @method string    getText()       Returns the current record's "text" value
 * @method timestamp getCreatedAt()  Returns the current record's "created_at" value
 * @method Event     getEvent()      Returns the current record's "Event" value
 * @method EventStat setId()         Sets the current record's "id" value
 * @method EventStat setEventId()    Sets the current record's "event_id" value
 * @method EventStat setType()       Sets the current record's "type" value
 * @method EventStat setText()       Sets the current record's "text" value
 * @method EventStat setCreatedAt()  Sets the current record's "created_at" value
 * @method EventStat setEvent()      Sets the current record's "Event" value
 * 
 * @package    evento
 * @subpackage model
 * @author     Yaron Biton
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEventStat extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('event_stat');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('event_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('type', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('text', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Event', array(
             'local' => 'event_id',
             'foreign' => 'id'));
    }
}