<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CategoryLink', 'doctrine');

/**
 * BaseCategoryLink
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $category_id
 * @property string $type
 * @property string $txt
 * @property string $url
 * @property string $target_url
 * @property Category $Category
 * @property Doctrine_Collection $CategoryLinkUsage
 * 
 * @method integer             getId()                Returns the current record's "id" value
 * @method integer             getCategoryId()        Returns the current record's "category_id" value
 * @method string              getType()              Returns the current record's "type" value
 * @method string              getTxt()               Returns the current record's "txt" value
 * @method string              getUrl()               Returns the current record's "url" value
 * @method string              getTargetUrl()         Returns the current record's "target_url" value
 * @method Category            getCategory()          Returns the current record's "Category" value
 * @method Doctrine_Collection getCategoryLinkUsage() Returns the current record's "CategoryLinkUsage" collection
 * @method CategoryLink        setId()                Sets the current record's "id" value
 * @method CategoryLink        setCategoryId()        Sets the current record's "category_id" value
 * @method CategoryLink        setType()              Sets the current record's "type" value
 * @method CategoryLink        setTxt()               Sets the current record's "txt" value
 * @method CategoryLink        setUrl()               Sets the current record's "url" value
 * @method CategoryLink        setTargetUrl()         Sets the current record's "target_url" value
 * @method CategoryLink        setCategory()          Sets the current record's "Category" value
 * @method CategoryLink        setCategoryLinkUsage() Sets the current record's "CategoryLinkUsage" collection
 * 
 * @package    evento
 * @subpackage model
 * @author     Yaron Biton
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCategoryLink extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('category_link');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('category_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('type', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('txt', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('url', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('target_url', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Category', array(
             'local' => 'category_id',
             'foreign' => 'id'));

        $this->hasMany('CategoryLinkUsage', array(
             'local' => 'id',
             'foreign' => 'category_link_id'));
    }
}