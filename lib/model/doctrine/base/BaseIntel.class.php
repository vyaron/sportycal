<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Intel', 'doctrine');

/**
 * BaseIntel
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $cal_id
 * @property integer $category_id
 * @property integer $event_id
 * @property integer $user_id
 * @property integer $partner_id
 * @property string $session_code
 * @property string $section
 * @property string $action
 * @property string $label
 * @property integer $value
 * @property timestamp $created_at
 * @property integer $user_cal_id
 * @property string $ip_address
 * @property Cal $Cal
 * @property Category $Category
 * @property Partner $Partner
 * @property User $User
 * @property UserCal $UserCal
 * @property Event $Event
 * 
 * @method integer   getId()           Returns the current record's "id" value
 * @method integer   getCalId()        Returns the current record's "cal_id" value
 * @method integer   getCategoryId()   Returns the current record's "category_id" value
 * @method integer   getEventId()      Returns the current record's "event_id" value
 * @method integer   getUserId()       Returns the current record's "user_id" value
 * @method integer   getPartnerId()    Returns the current record's "partner_id" value
 * @method string    getSessionCode()  Returns the current record's "session_code" value
 * @method string    getSection()      Returns the current record's "section" value
 * @method string    getAction()       Returns the current record's "action" value
 * @method string    getLabel()        Returns the current record's "label" value
 * @method integer   getValue()        Returns the current record's "value" value
 * @method timestamp getCreatedAt()    Returns the current record's "created_at" value
 * @method integer   getUserCalId()    Returns the current record's "user_cal_id" value
 * @method string    getIpAddress()    Returns the current record's "ip_address" value
 * @method Cal       getCal()          Returns the current record's "Cal" value
 * @method Category  getCategory()     Returns the current record's "Category" value
 * @method Partner   getPartner()      Returns the current record's "Partner" value
 * @method User      getUser()         Returns the current record's "User" value
 * @method UserCal   getUserCal()      Returns the current record's "UserCal" value
 * @method Event     getEvent()        Returns the current record's "Event" value
 * @method Intel     setId()           Sets the current record's "id" value
 * @method Intel     setCalId()        Sets the current record's "cal_id" value
 * @method Intel     setCategoryId()   Sets the current record's "category_id" value
 * @method Intel     setEventId()      Sets the current record's "event_id" value
 * @method Intel     setUserId()       Sets the current record's "user_id" value
 * @method Intel     setPartnerId()    Sets the current record's "partner_id" value
 * @method Intel     setSessionCode()  Sets the current record's "session_code" value
 * @method Intel     setSection()      Sets the current record's "section" value
 * @method Intel     setAction()       Sets the current record's "action" value
 * @method Intel     setLabel()        Sets the current record's "label" value
 * @method Intel     setValue()        Sets the current record's "value" value
 * @method Intel     setCreatedAt()    Sets the current record's "created_at" value
 * @method Intel     setUserCalId()    Sets the current record's "user_cal_id" value
 * @method Intel     setIpAddress()    Sets the current record's "ip_address" value
 * @method Intel     setCal()          Sets the current record's "Cal" value
 * @method Intel     setCategory()     Sets the current record's "Category" value
 * @method Intel     setPartner()      Sets the current record's "Partner" value
 * @method Intel     setUser()         Sets the current record's "User" value
 * @method Intel     setUserCal()      Sets the current record's "UserCal" value
 * @method Intel     setEvent()        Sets the current record's "Event" value
 * 
 * @package    evento
 * @subpackage model
 * @author     Yaron Biton
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseIntel extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('intel');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('cal_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('category_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('event_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('user_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('partner_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('session_code', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('section', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('action', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('label', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('value', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('user_cal_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('ip_address', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Cal', array(
             'local' => 'cal_id',
             'foreign' => 'id'));

        $this->hasOne('Category', array(
             'local' => 'category_id',
             'foreign' => 'id'));

        $this->hasOne('Partner', array(
             'local' => 'partner_id',
             'foreign' => 'id'));

        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasOne('UserCal', array(
             'local' => 'user_cal_id',
             'foreign' => 'id'));

        $this->hasOne('Event', array(
             'local' => 'event_id',
             'foreign' => 'id'));
    }
}