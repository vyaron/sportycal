<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Address', 'doctrine');

/**
 * BaseAddress
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $country_code
 * @property string $state
 * @property string $city
 * @property string $addr
 * @property string $zip
 * @property integer $location_id
 * @property Location $Location
 * @property Doctrine_Collection $Category
 * @property Doctrine_Collection $Event
 * 
 * @method integer             getId()           Returns the current record's "id" value
 * @method string              getCountryCode()  Returns the current record's "country_code" value
 * @method string              getState()        Returns the current record's "state" value
 * @method string              getCity()         Returns the current record's "city" value
 * @method string              getAddr()         Returns the current record's "addr" value
 * @method string              getZip()          Returns the current record's "zip" value
 * @method integer             getLocationId()   Returns the current record's "location_id" value
 * @method Location            getLocation()     Returns the current record's "Location" value
 * @method Doctrine_Collection getCategory()     Returns the current record's "Category" collection
 * @method Doctrine_Collection getEvent()        Returns the current record's "Event" collection
 * @method Address             setId()           Sets the current record's "id" value
 * @method Address             setCountryCode()  Sets the current record's "country_code" value
 * @method Address             setState()        Sets the current record's "state" value
 * @method Address             setCity()         Sets the current record's "city" value
 * @method Address             setAddr()         Sets the current record's "addr" value
 * @method Address             setZip()          Sets the current record's "zip" value
 * @method Address             setLocationId()   Sets the current record's "location_id" value
 * @method Address             setLocation()     Sets the current record's "Location" value
 * @method Address             setCategory()     Sets the current record's "Category" collection
 * @method Address             setEvent()        Sets the current record's "Event" collection
 * 
 * @package    evento
 * @subpackage model
 * @author     Yaron Biton
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAddress extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('address');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('country_code', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('state', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('city', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('addr', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('zip', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('location_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Location', array(
             'local' => 'location_id',
             'foreign' => 'id'));

        $this->hasMany('Category', array(
             'local' => 'id',
             'foreign' => 'address_id'));

        $this->hasMany('Event', array(
             'local' => 'id',
             'foreign' => 'address_id'));
    }
}