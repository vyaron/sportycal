<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('UserSearch', 'doctrine');

/**
 * BaseUserSearch
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property string $str
 * @property timestamp $created_at
 * @property timestamp $from_date
 * @property timestamp $to_date
 * @property string $ip_address
 * @property User $User
 * 
 * @method integer    getId()         Returns the current record's "id" value
 * @method integer    getUserId()     Returns the current record's "user_id" value
 * @method string     getStr()        Returns the current record's "str" value
 * @method timestamp  getCreatedAt()  Returns the current record's "created_at" value
 * @method timestamp  getFromDate()   Returns the current record's "from_date" value
 * @method timestamp  getToDate()     Returns the current record's "to_date" value
 * @method string     getIpAddress()  Returns the current record's "ip_address" value
 * @method User       getUser()       Returns the current record's "User" value
 * @method UserSearch setId()         Sets the current record's "id" value
 * @method UserSearch setUserId()     Sets the current record's "user_id" value
 * @method UserSearch setStr()        Sets the current record's "str" value
 * @method UserSearch setCreatedAt()  Sets the current record's "created_at" value
 * @method UserSearch setFromDate()   Sets the current record's "from_date" value
 * @method UserSearch setToDate()     Sets the current record's "to_date" value
 * @method UserSearch setIpAddress()  Sets the current record's "ip_address" value
 * @method UserSearch setUser()       Sets the current record's "User" value
 * 
 * @package    evento
 * @subpackage model
 * @author     Yaron Biton
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUserSearch extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user_search');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('user_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('str', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('from_date', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('to_date', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('ip_address', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));
    }
}