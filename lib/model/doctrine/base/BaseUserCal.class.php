<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('UserCal', 'doctrine');

/**
 * BaseUserCal
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property integer $cal_id
 * @property string $cal_type
 * @property integer $reminder1
 * @property integer $reminder2
 * @property timestamp $taken_at
 * @property timestamp $updated_at
 * @property integer $partner_id
 * @property integer $category_id
 * @property string $ip_address
 * @property string $hash
 * @property string $label
 * @property integer $birthday_cal_for_user_id
 * @property integer $reminder
 * @property Cal $Cal
 * @property User $User
 * @property Partner $Partner
 * @property Category $Category
 * @property User $User_5
 * @property Doctrine_Collection $CategoryLinkUsage
 * @property Doctrine_Collection $Intel
 * 
 * @method integer             getId()                       Returns the current record's "id" value
 * @method integer             getUserId()                   Returns the current record's "user_id" value
 * @method integer             getCalId()                    Returns the current record's "cal_id" value
 * @method string              getCalType()                  Returns the current record's "cal_type" value
 * @method integer             getReminder1()                Returns the current record's "reminder1" value
 * @method integer             getReminder2()                Returns the current record's "reminder2" value
 * @method timestamp           getTakenAt()                  Returns the current record's "taken_at" value
 * @method timestamp           getUpdatedAt()                Returns the current record's "updated_at" value
 * @method integer             getPartnerId()                Returns the current record's "partner_id" value
 * @method integer             getCategoryId()               Returns the current record's "category_id" value
 * @method string              getIpAddress()                Returns the current record's "ip_address" value
 * @method string              getHash()                     Returns the current record's "hash" value
 * @method string              getLabel()                    Returns the current record's "label" value
 * @method integer             getBirthdayCalForUserId()     Returns the current record's "birthday_cal_for_user_id" value
 * @method integer             getReminder()                 Returns the current record's "reminder" value
 * @method Cal                 getCal()                      Returns the current record's "Cal" value
 * @method User                getUser()                     Returns the current record's "User" value
 * @method Partner             getPartner()                  Returns the current record's "Partner" value
 * @method Category            getCategory()                 Returns the current record's "Category" value
 * @method User                getUser5()                    Returns the current record's "User_5" value
 * @method Doctrine_Collection getCategoryLinkUsage()        Returns the current record's "CategoryLinkUsage" collection
 * @method Doctrine_Collection getIntel()                    Returns the current record's "Intel" collection
 * @method UserCal             setId()                       Sets the current record's "id" value
 * @method UserCal             setUserId()                   Sets the current record's "user_id" value
 * @method UserCal             setCalId()                    Sets the current record's "cal_id" value
 * @method UserCal             setCalType()                  Sets the current record's "cal_type" value
 * @method UserCal             setReminder1()                Sets the current record's "reminder1" value
 * @method UserCal             setReminder2()                Sets the current record's "reminder2" value
 * @method UserCal             setTakenAt()                  Sets the current record's "taken_at" value
 * @method UserCal             setUpdatedAt()                Sets the current record's "updated_at" value
 * @method UserCal             setPartnerId()                Sets the current record's "partner_id" value
 * @method UserCal             setCategoryId()               Sets the current record's "category_id" value
 * @method UserCal             setIpAddress()                Sets the current record's "ip_address" value
 * @method UserCal             setHash()                     Sets the current record's "hash" value
 * @method UserCal             setLabel()                    Sets the current record's "label" value
 * @method UserCal             setBirthdayCalForUserId()     Sets the current record's "birthday_cal_for_user_id" value
 * @method UserCal             setReminder()                 Sets the current record's "reminder" value
 * @method UserCal             setCal()                      Sets the current record's "Cal" value
 * @method UserCal             setUser()                     Sets the current record's "User" value
 * @method UserCal             setPartner()                  Sets the current record's "Partner" value
 * @method UserCal             setCategory()                 Sets the current record's "Category" value
 * @method UserCal             setUser5()                    Sets the current record's "User_5" value
 * @method UserCal             setCategoryLinkUsage()        Sets the current record's "CategoryLinkUsage" collection
 * @method UserCal             setIntel()                    Sets the current record's "Intel" collection
 * 
 * @package    evento
 * @subpackage model
 * @author     Yaron Biton
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUserCal extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user_cal');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('user_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('cal_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('cal_type', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('reminder1', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('reminder2', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('taken_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('partner_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('category_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('ip_address', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('hash', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('label', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('birthday_cal_for_user_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('reminder', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Cal', array(
             'local' => 'cal_id',
             'foreign' => 'id'));

        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasOne('Partner', array(
             'local' => 'partner_id',
             'foreign' => 'id'));

        $this->hasOne('Category', array(
             'local' => 'category_id',
             'foreign' => 'id'));

        $this->hasOne('User as User_5', array(
             'local' => 'birthday_cal_for_user_id',
             'foreign' => 'id'));

        $this->hasMany('CategoryLinkUsage', array(
             'local' => 'id',
             'foreign' => 'user_cal_id'));

        $this->hasMany('Intel', array(
             'local' => 'id',
             'foreign' => 'user_cal_id'));
    }
}