<?php

/**
 * Location
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    evento
 * @subpackage model
 * @author     Yaron Biton
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Location extends BaseLocation
{
	const TYPE_COUNTRY 	= '3';
	const TYPE_STATE 	= '2';
	const TYPE_CITY 	= '1';
	
	public function toJSON($locType) {
		$strJson = '{';
		$strJson .= $this->toJSONSpecific($locType);
		$strJson .= '}';
		return $strJson;
	}
	private function toJSONSpecific($locType) {
		$strJson = '';
		$code = null;
		$name = null;
		if ($locType == self::TYPE_COUNTRY) {
			$code 	= $this->getCountry(); 
			$name 	= Utils::$COUNTRIES[$code];
		} else if ($locType == self::TYPE_STATE) {
			$code 			= $this->getState(); 
			$countryCode 	= $this->getCountry();
			$name 	= Utils::$STATES[$countryCode][$code];
		}
		


		if (!$code || !$name ) {
			$code 	= $this->getId(); 
			$name 	= $this->getName();
		}		

		$strJson .= '"id": "'.$code.'"';
		$strJson .= ',"name": "'.$name.'"';		
		
		return $strJson;
	}
	
	public static function makeDistinct($locs, $locType) {
		if ($locType == self::TYPE_CITY) return $locs;
		
		$uniques = array();
		foreach ($locs as $loc) {
			if ($locType == self::TYPE_COUNTRY) $key = $loc->getCountry();
			else 								$key = $loc->getState();
			
			$uniques[$key] = $loc;
		}
		return array_values($uniques);
			
	}
	
	public static function makeJSON($locs, $locType, $limit) {
		
		
		$locs = self::makeDistinct($locs, $locType);
		
		$count = 0;
		$strJson = '[ ';
		foreach ($locs as $loc) {
			$strJson .= $loc->toJSON($locType) . ",";	
			if (++$count >= $limit) break;
		}
		$strJson = substr($strJson, 0, -1);
		$strJson .= ']';
		return $strJson;
	}
	
	
}

function cmpLocations($l1, $l2) {
    if ($l1->getName() == $l2->getName()) {
        return 0;
    }
    return ($l1->getName() < $l2->getName()) ? -1 : 1;
}
